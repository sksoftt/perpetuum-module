<?php

/*
 * This module for Theming lessons
 */


/*
 * implements hook_menu
 */

function look_menu()
{
    return array
        (
        "theming-examples" => array
            (
            "title"            => "Theming examples",
            "description"      => "This page for implement of theme functions",
            "page callback"    => "look_example_page",
            "access arguments" => array("access content"),
        ),
    );
}

//this function will create list <li> by using theme function
function look_example_page()
{
    // Lesson 73 - in lesson 78 every list becomes to ordered list
    $li   = array();
    $li[] = "First li";
    $li[] = "Second li";
    $li[] = "Third li";
    $li[] = "Clear cashes";

    $output = "<h2>Simple list</h2>";

    //theme() receive hook name and parameter.
    // then return string result
    $output .= theme("item_list", array("items" => $li));


    //a little bit more complex example
    $output .= "<h3>This is a little more complex example</h3>";
    $output .= "<h3>Represents ordered list</h3>";

    $ol    = array();
    $ol[]  = "First ordered";
    $ol[]  = "Second ordered";
    $ol [] = "Third ordered";

    $output .= theme("item_list", array("items" => $ol,
        "type"  => "ol",
        "title" => t("This title generated from theme function")));


    // lesson 75 - creating table with theme function
    $output .= "<h2>Table example</h2>";
    $headers   = array(); // creating headers of the table
    $headers[] = t("link");
    $headers[] = t("Description");

    //create rows of the table
    $row   = array();
    $row[] = array
        (
        l("google", "google.com"),
        "Link to google site"
    );

    $row[] = array
        (
        l("Gmail", "gmail.com"),
        "Link to google mail"
    );

    $output .= theme("table", array("header" => $headers, "rows" => $row));


    //for lesson 76 - uxsing selfmade function
    //$output .= theme("look_new_func", array("string" => "This is the value"));
    $output .= theme("look_new_func", array("string" => "This is the value"));

    // Lesson 77
    $output .= theme("look_template", array("string" => "This is Slava"));
    return $output;
}

/*
 * Lesson 76
 * implements theme function
 */

// implements new thee function
function theme_look_new_func($vars = array())
{
    drupal_add_css(drupal_get_path("module", "look")."/css/1.css");
    $output = "";
    if (isset($vars["string"]))
        $output .= "<span style='background-color: #A5F5A8;'>" . $vars["string"] . "</span>";
    return $output;
}

//then implements hook_theme
// it will register theme function
function look_theme()
{
    return array
        (
        //theme function name
        "look_new_func" => array
            (
            //variables default values
            "variables" => array("string" => "Default value"),
        ),
        // lesson 77
        // create the template file
        "look_template" => array
            (
            "variables" => array("string" => array()),
            "template"  => "templates/look_temp",
        ),
    );
}

// Lesson 78 - preprocess functions

/*
 * Implements MODULE_preprocess_HOOk
 */
// before theme shows values
function look_preprocess_item_list(&$variables)
{
    $variables["type"] = "ol"; //every list becomes to ordered list

    foreach ($variables["items"] as $key => $val)
    {
        $variables["items"][$key] = str_replace("Clear cashes", l("Clear cashes", "admin/config/development/performance"), $val);
    }
    return;
}

/*
 * implements hppk_theme_registry_alter()
 */

//can reset function that will work on some hook
// "item_list" for example and change it's display time
function look_theme_registry_alter(&$theme_registry)
{
    return;
}
